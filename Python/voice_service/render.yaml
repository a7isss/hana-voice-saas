# render.yaml - Arabic Healthcare Voice Service Deployment Configuration
# Deploys self-hosted voice processing service with Coqui XTTS and Vosk Arabic

services:
  # Main voice processing service
  - type: web
    name: arabic-healthcare-voice-service
    env: python
    plan: standard  # Higher RAM for voice models
    region: frankfurt  # Closest to Saudi users for low latency
    runtime: python3

    # Build configuration with uv dependency management
    buildCommand: |
      echo "üèóÔ∏è Building Arabic Healthcare Voice Service..."

      # Install Python dependencies with uv
      pip install --upgrade pip
      pip install uv
      uv venv .venv

      # Activate virtual environment and install packages
      source .venv/bin/activate
      uv pip install -r requirements.txt

      # Download and setup voice models on persistent disk
      echo "üì• Setting up voice models..."
      python scripts/download_models.py

      echo "‚úÖ Build complete!"

    # Runtime configuration
    startCommand: |
      echo "üöÄ Starting Arabic Healthcare Voice Service..."
      source .venv/bin/activate
      uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 1 --log-level info

    # Health check for FastAPI endpoints
    healthCheckPath: /health

    # Persistent Disk for Voice Models (~3GB total)
    # Contains Vosk Arabic STT and Coqui XTTS TTS models
    disks:
      - name: voice-models-disk
        mountPath: /data  # Models stored at /data/models/
        sizeGB: 5  # Extra space for future model updates

    # Environment Variables
    envVars:
      - key: PYTHON_VERSION
        value: "3.11"

      # Model paths (mounted on persistent disk)
      - key: VOSK_MODEL_PATH
        value: /data/models/vosk-model-ar-0.22

      # Coqui TTS cache location (persistent storage)
      - key: TTS_HOME
        value: /data/tts_cache

      # Disable GPU (use CPU for better compatibility)
      - key: TTS_USE_GPU
        value: false

      # Security Configuration - CRITICAL: Set these in Render dashboard
      - key: VOICE_SERVICE_SECRET
        generateValue: true  # Generate secure random secret
        comment: "Secret key for admin authentication - SET IN RENDER DASHBOARD"

      - key: VOICE_SERVICE_TOKEN
        generateValue: true  # Generate secure JWT secret
        comment: "JWT secret for session tokens - SET IN RENDER DASHBOARD"

      # Rate limiting and session management
      - key: MAX_CONCURRENT_SESSIONS
        value: "10"
        comment: "Maximum number of concurrent voice sessions"

      - key: RATE_LIMIT_PER_MINUTE
        value: "60"
        comment: "Maximum requests per IP per minute"

      # Application configuration
      - key: VOICE_SERVICE_ENV
        value: production

      # Logging level
      - key: LOG_LEVEL
        value: INFO

# Background worker for model maintenance (optional)
# - type: worker
#   name: voice-model-maintenance
#   env: python
#   plan: starter
#   region: frankfurt
#
#   buildCommand: |
#     pip install uv
#     uv venv .venv && source .venv/bin/activate
#     uv pip install schedule vosk TTS
#
#   startCommand: |
#     source .venv/bin/activate
#     python scripts/model_maintenance.py
#
#   envVars:
#     - key: MAINTENANCE_INTERVAL_HOURS
#       value: "24"

# Static storage for generated audio files (optional future enhancement)
# persistentDisk:
#   sizeGB: 10
#   name: audio-files-disk

# Environment-specific overrides (uncomment for production)
# environments:
#   production:
#     envVars:
#       - key: LOG_LEVEL
#         value: WARNING
#       - key: MONITORING_ENABLED
#         value: true
